openapi: 3.0.3

info:
  title: Tavily API
  description: Tavily API provides powerful search, extraction, crawling, and mapping capabilities optimized for AI agents and LLMs.
  version: 1.0.0
  contact:
    email: support@tavily.com

servers:
  - url: https://api.tavily.com
    description: Production

tags:
  - name: Search
    description: Execute search queries using Tavily Search
  - name: Extract
    description: Extract web page content from specified URLs
  - name: Crawl
    description: Graph-based website traversal with intelligent discovery
  - name: Map
    description: Generate comprehensive site maps through graph traversal

security:
  - bearerAuth: []

paths:
  /search:
    post:
      tags: [Search]
      summary: Execute a search query
      description: Execute a search query using Tavily Search to retrieve relevant results optimized for AI agents.
      operationId: searchPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: The search query to execute with Tavily.
                  example: who is Leo Messi?
                auto_parameters:
                  type: boolean
                  description: When enabled, Tavily automatically configures search parameters based on your query's content and intent.
                  default: false
                topic:
                  type: string
                  description: The category of the search.
                  default: general
                  enum:
                    - general
                    - news
                    - finance
                search_depth:
                  type: string
                  description: The depth of the search. Advanced search costs 2 API Credits, basic costs 1 API Credit.
                  enum:
                    - basic
                    - advanced
                  default: basic
                chunks_per_source:
                  type: integer
                  description: Maximum number of relevant chunks returned per source (maximum 500 characters each). Available only when search_depth is advanced.
                  default: 3
                  minimum: 1
                  maximum: 3
                max_results:
                  type: integer
                  description: The maximum number of search results to return.
                  default: 5
                  minimum: 0
                  maximum: 20
                  example: 1
                time_range:
                  type: string
                  description: The time range back from the current date to filter results.
                  enum:
                    - day
                    - week
                    - month
                    - year
                    - d
                    - w
                    - m
                    - 'y'
                start_date:
                  type: string
                  description: Will return all results after the specified start date. Format YYYY-MM-DD.
                  example: '2025-02-09'
                end_date:
                  type: string
                  description: Will return all results before the specified end date. Format YYYY-MM-DD.
                  example: '2000-01-28'
                include_answer:
                  oneOf:
                    - type: boolean
                    - type: string
                      enum:
                        - basic
                        - advanced
                  description: Include an LLM-generated answer to the provided query. Basic or true returns a quick answer, advanced returns a detailed answer.
                  default: false
                include_raw_content:
                  oneOf:
                    - type: boolean
                    - type: string
                      enum:
                        - markdown
                        - text
                  description: Include the cleaned and parsed HTML content of each search result. Markdown or true returns markdown format, text returns plain text.
                  default: false
                include_images:
                  type: boolean
                  description: Also perform an image search and include the results in the response.
                  default: false
                include_image_descriptions:
                  type: boolean
                  description: When include_images is true, also add a descriptive text for each image.
                  default: false
                include_favicon:
                  type: boolean
                  description: Whether to include the favicon URL for each result.
                  default: false
                include_domains:
                  type: array
                  description: A list of domains to specifically include in the search results. Maximum 300 domains.
                  items:
                    type: string
                  default: []
                exclude_domains:
                  type: array
                  description: A list of domains to specifically exclude from the search results. Maximum 150 domains.
                  items:
                    type: string
                  default: []
                country:
                  type: string
                  description: Boost search results from a specific country. Available only if topic is general.
            examples:
              basic:
                value:
                  query: who is Leo Messi?
                  max_results: 5
      responses:
        '200':
          description: Search results returned successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - query
                  - results
                  - images
                  - response_time
                properties:
                  query:
                    type: string
                    description: The search query that was executed.
                    example: Who is Leo Messi?
                  answer:
                    type: string
                    description: A short answer to the user's query, generated by an LLM. Included only if include_answer is requested.
                    example: Lionel Messi, born in 1987, is an Argentine footballer widely regarded as one of the greatest players of his generation.
                  images:
                    type: array
                    description: List of query-related images.
                    example: []
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        description:
                          type: string
                  results:
                    type: array
                    description: A list of sorted search results, ranked by relevancy.
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the search result.
                          example: Lionel Messi Facts | Britannica
                        url:
                          type: string
                          description: The URL of the search result.
                          example: https://www.britannica.com/facts/Lionel-Messi
                        content:
                          type: string
                          description: A short description of the search result.
                        score:
                          type: number
                          format: float
                          description: The relevance score of the search result.
                          example: 0.81025416
                        raw_content:
                          type: string
                          description: The cleaned and parsed HTML content of the search result. Only if include_raw_content is true.
                        favicon:
                          type: string
                          description: The favicon URL for the result.
                  auto_parameters:
                    type: object
                    description: A dictionary of the selected auto_parameters, only shown when auto_parameters is true.
                  response_time:
                    type: number
                    format: float
                    description: Time in seconds it took to complete the request.
                    example: 1.67
                  request_id:
                    type: string
                    description: A unique request identifier you can share with customer support.
                    example: 123e4567-e89b-12d3-a456-426614174111
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '432':
          $ref: '#/components/responses/PlanLimitExceeded'
        '433':
          $ref: '#/components/responses/PayGoLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /extract:
    post:
      tags: [Extract]
      summary: Extract web page content
      description: Extract web page content from one or more specified URLs using Tavily Extract.
      operationId: extractPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - urls
              properties:
                urls:
                  oneOf:
                    - type: string
                      description: The URL to extract content from.
                      example: https://en.wikipedia.org/wiki/Artificial_intelligence
                    - type: array
                      items:
                        type: string
                      description: A list of URLs to extract content from.
                      example:
                        - https://en.wikipedia.org/wiki/Artificial_intelligence
                        - https://en.wikipedia.org/wiki/Machine_learning
                include_images:
                  type: boolean
                  description: Include a list of images extracted from the URLs in the response.
                  default: false
                include_favicon:
                  type: boolean
                  description: Whether to include the favicon URL for each result.
                  default: false
                extract_depth:
                  type: string
                  description: The depth of the extraction process. Advanced extraction costs 2 credits per 5 successful URL extractions, basic costs 1 credit per 5.
                  enum:
                    - basic
                    - advanced
                  default: basic
                format:
                  type: string
                  description: The format of the extracted web page content. Markdown returns content in markdown format, text returns plain text.
                  enum:
                    - markdown
                    - text
                  default: markdown
                timeout:
                  type: number
                  format: float
                  description: Maximum time in seconds to wait for the URL extraction before timing out. Must be between 1.0 and 60.0 seconds.
                  minimum: 1
                  maximum: 60
            examples:
              basic:
                value:
                  urls: https://en.wikipedia.org/wiki/Artificial_intelligence
                  extract_depth: basic
                  format: markdown
      responses:
        '200':
          description: Extraction results returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: A list of extracted content from the provided URLs.
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL from which the content was extracted.
                          example: https://en.wikipedia.org/wiki/Artificial_intelligence
                        raw_content:
                          type: string
                          description: The full content extracted from the page.
                        images:
                          type: array
                          description: This is only available if include_images is set to true. A list of image URLs extracted from the page.
                          example: []
                          items:
                            type: string
                        favicon:
                          type: string
                          description: The favicon URL for the result.
                  failed_results:
                    type: array
                    description: A list of URLs that could not be processed.
                    example: []
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL that failed to be processed.
                        error:
                          type: string
                          description: An error message describing why the URL couldn't be processed.
                  response_time:
                    type: number
                    format: float
                    description: Time in seconds it took to complete the request.
                    example: 0.02
                  request_id:
                    type: string
                    description: A unique request identifier you can share with customer support.
                    example: 123e4567-e89b-12d3-a456-426614174111
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '432':
          $ref: '#/components/responses/PlanLimitExceeded'
        '433':
          $ref: '#/components/responses/PayGoLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /crawl:
    post:
      tags: [Crawl]
      summary: Crawl website
      description: Graph-based website traversal tool that can explore hundreds of paths in parallel with built-in extraction and intelligent discovery.
      operationId: crawlPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  description: The root URL to begin the crawl.
                  example: docs.tavily.com
                instructions:
                  type: string
                  description: Natural language instructions for the crawler. When specified, the cost increases to 2 API credits per 10 successful pages.
                  example: Find all pages about the Python SDK
                max_depth:
                  type: integer
                  description: Max depth of the crawl. Defines how far from the base URL the crawler can explore.
                  default: 1
                  minimum: 1
                max_breadth:
                  type: integer
                  description: Max number of links to follow per level of the tree (i.e., per page).
                  default: 20
                  minimum: 1
                limit:
                  type: integer
                  description: Total number of links the crawler will process before stopping.
                  default: 50
                  minimum: 1
                select_paths:
                  type: array
                  description: Regex patterns to select only URLs with specific path patterns.
                  items:
                    type: string
                select_domains:
                  type: array
                  description: Regex patterns to select crawling to specific domains or subdomains.
                  items:
                    type: string
                exclude_paths:
                  type: array
                  description: Regex patterns to exclude URLs with specific path patterns.
                  items:
                    type: string
                exclude_domains:
                  type: array
                  description: Regex patterns to exclude specific domains or subdomains from crawling.
                  items:
                    type: string
                allow_external:
                  type: boolean
                  description: Whether to include external domain links in the final results list.
                  default: true
                include_images:
                  type: boolean
                  description: Whether to include images in the crawl results.
                  default: false
                extract_depth:
                  type: string
                  description: Advanced extraction costs 2 credits per 5 successful extractions, basic costs 1 credit per 5.
                  enum:
                    - basic
                    - advanced
                  default: basic
                format:
                  type: string
                  description: The format of the extracted web page content.
                  enum:
                    - markdown
                    - text
                  default: markdown
                include_favicon:
                  type: boolean
                  description: Whether to include the favicon URL for each result.
                  default: false
            examples:
              basic:
                value:
                  url: docs.tavily.com
                  max_depth: 1
                  limit: 50
      responses:
        '200':
          description: Crawl results returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  base_url:
                    type: string
                    description: The base URL that was crawled.
                    example: docs.tavily.com
                  results:
                    type: array
                    description: A list of extracted content from the crawled URLs.
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL that was crawled.
                        raw_content:
                          type: string
                          description: The full content extracted from the page.
                        favicon:
                          type: string
                          description: The favicon URL for the result.
                  response_time:
                    type: number
                    format: float
                    description: Time in seconds it took to complete the request.
                    example: 1.23
                  request_id:
                    type: string
                    description: A unique request identifier you can share with customer support.
                    example: 123e4567-e89b-12d3-a456-426614174111
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '432':
          $ref: '#/components/responses/PlanLimitExceeded'
        '433':
          $ref: '#/components/responses/PayGoLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /map:
    post:
      tags: [Map]
      summary: Map website
      description: Traverse websites like a graph to explore hundreds of paths in parallel with intelligent discovery to generate comprehensive site maps.
      operationId: mapPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  description: The root URL to begin the mapping.
                  example: docs.tavily.com
                instructions:
                  type: string
                  description: Natural language instructions for the crawler. When specified, the cost increases to 2 API credits per 10 successful pages.
                  example: Find all pages about the Python SDK
                max_depth:
                  type: integer
                  description: Max depth of the mapping. Defines how far from the base URL the crawler can explore.
                  default: 1
                  minimum: 1
                max_breadth:
                  type: integer
                  description: Max number of links to follow per level of the tree (i.e., per page).
                  default: 20
                  minimum: 1
                limit:
                  type: integer
                  description: Total number of links the crawler will process before stopping.
                  default: 50
                  minimum: 1
                select_paths:
                  type: array
                  description: Regex patterns to select only URLs with specific path patterns.
                  items:
                    type: string
                select_domains:
                  type: array
                  description: Regex patterns to select crawling to specific domains or subdomains.
                  items:
                    type: string
                exclude_paths:
                  type: array
                  description: Regex patterns to exclude URLs with specific path patterns.
                  items:
                    type: string
                exclude_domains:
                  type: array
                  description: Regex patterns to exclude specific domains or subdomains from crawling.
                  items:
                    type: string
                allow_external:
                  type: boolean
                  description: Whether to include external domain links in the final results list.
                  default: true
            examples:
              basic:
                value:
                  url: docs.tavily.com
                  max_depth: 1
                  limit: 50
      responses:
        '200':
          description: Map results returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  base_url:
                    type: string
                    description: The base URL that was mapped.
                    example: docs.tavily.com
                  results:
                    type: array
                    description: A list of URLs that were discovered during the mapping.
                    items:
                      type: string
                    example:
                      - https://docs.tavily.com/welcome
                      - https://docs.tavily.com/documentation/api-credits
                  response_time:
                    type: number
                    format: float
                    description: Time in seconds it took to complete the request.
                    example: 1.23
                  request_id:
                    type: string
                    description: A unique request identifier you can share with customer support.
                    example: 123e4567-e89b-12d3-a456-426614174111
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '432':
          $ref: '#/components/responses/PlanLimitExceeded'
        '433':
          $ref: '#/components/responses/PayGoLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Bearer authentication header in the form Bearer <token>, where <token> is your Tavily API key (e.g., Bearer tvly-YOUR_API_KEY).

  responses:
    BadRequest:
      description: Bad Request - Your request is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: Invalid request parameters

    Unauthorized:
      description: Unauthorized - Your API key is wrong or missing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: 'Unauthorized: missing or invalid API key.'

    Forbidden:
      description: Forbidden - URL is not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: '[403] URL is not supported'

    TooManyRequests:
      description: Too many requests - Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: Your request has been blocked due to excessive requests. Please reduce rate of requests.

    PlanLimitExceeded:
      description: Key limit or Plan Limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: This request exceeds your plan's set usage limit. Please upgrade your plan or contact support@tavily.com

    PayGoLimitExceeded:
      description: PayGo limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: This request exceeds the pay-as-you-go limit. You can increase your limit on the Tavily dashboard.

    InternalServerError:
      description: Internal Server Error - We had a problem with our server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                detail:
                  error: Internal Server Error

  schemas:
    Error:
      type: object
      properties:
        detail:
          type: object
          properties:
            error:
              type: string

